package com.techblog.entities;

import java.sql.Timestamp;

/**
 *
 * @author Lenovo
 */
public class User {

    private String user_id;
    private String user_name, password, e_mail, gender, about;
    private String profile_pic;

    private Timestamp registertime;
    private String ErrorMessage;
    private sql_errors Error;

    /**
     * Default Constructor... Every variable is needed to be created manually.
     */
    public User() {
    }

    /**
     * Fully Copy. Clone/Copy constructor to make a deep copy. The fun-fact is
     * that, being of same class a clone constructor can access all the private
     * members and maintain encapsulation.
     *
     * @param user
     */
    public User(User user) {
        this.user_id = user.getUser_id();
        this.user_name = user.getUser_name();
        this.e_mail = user.getE_mail();
        this.profile_pic = user.getProfile_pic();
        this.about = user.getAbout();
        this.gender = user.getGender();
        this.registertime = user.getRegistertime();
        this.password = user.getPassword();
        this.ErrorMessage = user.getErrorMessage();
    }

    /**
     * partial copy. Convenient constructor for update. This constructor is
     * specially created to update user data. Initialization constructor to
     * initialize only explicit fields. Implicit are: Those who are
     * auto-generated by backend or database. Explicit are: Those who are need
     * to be inserted by user
     *
     * @param user
     * @param inclusive
     */
    public User(User user, boolean inclusive) {
        this.user_id = user.getUser_id();
        this.user_name = user.getUser_name();
        this.e_mail = user.getE_mail();
        this.profile_pic = user.getProfile_pic();
        this.about = user.getAbout();
    }

    /**
     * Initialization constructor to initialize only explicit fields. Implicit
     * are: Those who are auto-generated by backend or database. Explicit are:
     * Those who are need to be inserted by user
     *
     * @param user_name
     * @param password
     * @param e_mail
     * @param gender
     * @param about
     */
    public User(String user_name, String password, String e_mail, String gender,
            String about) {
        this.user_name = user_name;
        this.password = password;
        this.e_mail = e_mail;
        this.gender = gender;
        this.about = about;
    }

    /**
     * This constructor is specially created to update user data. Initialization
     * constructor to initialize only explicit fields. Implicit are: Those who
     * are auto-generated by backend or database. Explicit are: Those who are
     * need to be inserted by user
     *
     * @param user_id
     * @param user_name
     * @param e_mail
     * @param profile
     * @param about
     * @param inclusive
     */
    public User(String user_id, String user_name, String e_mail, String profile,
            String about, boolean inclusive) {
        this.user_id = user_id;
        this.user_name = user_name;
        this.e_mail = e_mail;
        this.profile_pic = profile;
        this.about = about;
    }

    /**
     * Initialization constructor to initialize implicit fields and explicit
     * fields. Implicit are: Those who are auto-generated by backend or
     * database. Explicit are: Those who are need to be inserted by user
     * explicit.
     *
     * @param user_id
     * @param user_name
     * @param password
     * @param e_mail
     * @param gender
     * @param about
     * @param registertime
     * @param ErrorMessage
     */
    public User(String user_id, String user_name, String password,
            String e_mail, String gender, String about, Timestamp registertime,
            String ErrorMessage) {
        this.user_id = user_id;
        this.user_name = user_name;
        this.password = password;
        this.e_mail = e_mail;
        this.gender = gender;
        this.about = about;
        this.registertime = registertime;
        this.ErrorMessage = ErrorMessage;
    }

    /**
     * This constructor is created for creation of new user also known as
     * Registration / Sign-up.
     *
     * @param user_name
     * @param password
     * @param e_mail
     * @param gender
     * @param about
     * @param profile_pic
     */
    public User(String user_name, String password, String e_mail, String gender, String about, String profile_pic) {
        this.user_name = user_name;
        this.password = password;
        this.e_mail = e_mail;
        this.gender = gender;
        this.about = about;
        this.profile_pic = profile_pic;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getUser_id() {
        return user_id;
    }

    public void setUser_id(String user_id) {
        this.user_id = user_id;
    }

    public String getUser_name() {
        return user_name;
    }

    public void setUser_name(String user_name) {
        this.user_name = user_name;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public String getE_mail() {
        return e_mail;
    }

    public void setE_mail(String e_mail) {
        this.e_mail = e_mail;
    }

    public String getAbout() {
        return about;
    }

    public void setAbout(String about) {
        this.about = about;
    }

    public Timestamp getRegistertime() {
        return registertime;
    }

    public void setRegistertime(Timestamp registertime) {
        this.registertime = registertime;
    }

    //If error sported..
    public String getErrorMessage() {
        return ErrorMessage;
    }

    public void setErrorMessage(String ErrorMessage) {
        this.ErrorMessage = ErrorMessage;
    }

    public sql_errors getError() {
        return Error;
    }

    public void setError(sql_errors Error) {
        this.Error = Error;
    }

    @Override
    public String toString() {
        return "User{" + "user_id=" + user_id + ", user_name=" + user_name
                + ", password=" + password + ", e_mail=" + e_mail + ", gender="
                + gender + ", about=" + about + ", registertime=" + registertime
                + ", ErrorMessage=" + ErrorMessage + '}';
    }

    public String getProfile_pic() {
        return profile_pic;
    }

    public void setProfile_pic(String profilePic) {
        this.profile_pic = profilePic;
    }
}
